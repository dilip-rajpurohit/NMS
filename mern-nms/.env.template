# NMS Production Environment Configuration Template
# Copy this file to .env and modify values for your deployment

# ===========================================
# NETWORK CONFIGURATION
# ===========================================

# Set this to your server's IP address or domain name
# Examples: 192.168.1.100, 10.0.0.50, your-domain.com
IP=localhost

# Port Configuration
BACKEND_PORT=5000
FRONTEND_PORT=3000

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# JWT Secret for authentication (CHANGE THIS!)
# Generate a secure secret: openssl rand -hex 32
JWT_SECRET=your-secure-jwt-secret-here-change-this-for-production

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# MongoDB credentials (CHANGE THESE!)
MONGO_ROOT_USER=admin
MONGO_ROOT_PASSWORD=mongo123

# ===========================================
# ADMIN USER CONFIGURATION
# ===========================================

# Default admin user credentials (CHANGE THESE!)
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=admin123

# ===========================================
# DEPLOYMENT CONFIGURATION
# ===========================================

# Environment mode
NODE_ENV=production

# JWT token expiration
JWT_EXPIRES_IN=24h

# Create admin user on startup
CREATE_ADMIN_USER=true

# CORS configuration for multi-device access
# Set to 'true' for development to allow connections from any IP
# Set to 'false' for production (default)
ALLOW_ALL_ORIGINS=true

# ===========================================
# SECURITY NOTES
# ===========================================
# 1. Always change default passwords
# 2. Use a strong JWT secret (32+ characters)
# 3. Keep this file secure and don't commit it to version control
# 4. Use HTTPS in production
# 5. Consider using environment-specific secrets management