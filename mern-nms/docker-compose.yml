services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: nms-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: nms_db
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - nms-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nms-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: ${BACKEND_PORT:-5000}
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/nms_db?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-please-set-JWT_SECRET-environment-variable-for-security}
      JWT_EXPIRES_IN: 24h
      CREATE_ADMIN_USER: "true"
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      FRONTEND_URL: http://${IP:-localhost}:${FRONTEND_PORT:-3000}
    ports:
      - "${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}"
    networks:
      - nms-network
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend/logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: process.env.BACKEND_PORT || 5000, path: '/api/health', timeout: 3000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://${IP:-localhost}:${BACKEND_PORT:-5000}/api
        REACT_APP_WS_URL: ws://${IP:-localhost}:${BACKEND_PORT:-5000}
        REACT_APP_ENV: production
    container_name: nms-frontend
    restart: unless-stopped
    environment:
      BACKEND_HOST: backend
      BACKEND_PORT: ${BACKEND_PORT:-5000}
      FRONTEND_PORT: 80
      IP: ${IP:-localhost}  # Legacy support
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    networks:
      - nms-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_data:
    driver: local

networks:
  nms-network:
    driver: bridge